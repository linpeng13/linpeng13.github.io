<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>木月天空</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="linziye.com/"/>
  <updated>2018-11-09T05:13:09.701Z</updated>
  <id>linziye.com/</id>
  
  <author>
    <name>sky</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于家庭剧院的几个认知备忘</title>
    <link href="linziye.com/2018/11/09/%E5%85%B3%E4%BA%8E%E5%AE%B6%E5%BA%AD%E5%89%A7%E9%99%A2%E7%9A%84%E5%87%A0%E4%B8%AA%E8%AE%A4%E7%9F%A5%E5%A4%87%E5%BF%98/"/>
    <id>linziye.com/2018/11/09/关于家庭剧院的几个认知备忘/</id>
    <published>2018-11-09T05:12:08.000Z</published>
    <updated>2018-11-09T05:13:09.701Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HTPC"><a href="#HTPC" class="headerlink" title="HTPC"></a>HTPC</h2><p>家庭剧院个人电脑，家庭剧院电脑，作为视讯或音频拨放或数位照片浏览的电脑。连接到电视去显示，通常使用遥控器操作，而不是使用键盘或鼠标操作。这类的电脑因为注重影音拨放的效果，所以要求低噪音。虽然具有类似功能的电脑是从20世纪的80年代末期开始，但是HTPC出现在新闻媒体则是大约是从1996年开始。</p><h2 id="KODI"><a href="#KODI" class="headerlink" title="KODI"></a>KODI</h2><p>Kodi是由XBMC基金会开发的开源媒体播放器，原名XBMC，Kodi可以运行在多种操作系统和硬件平台。 它可以让用户播放本地或网络存储设备中的大多数视频、音乐、播客及各种常见数位媒体文件。 它是Windows Media Center的很热门的替代物。</p><p><a href="https://kodi.tv/" target="_blank" rel="noopener">KODI 官网</a><br><a href="http://www.kodiplayer.cn/" target="_blank" rel="noopener">KODI 中文网</a></p><h2 id="Plex"><a href="#Plex" class="headerlink" title="Plex"></a>Plex</h2><p>Plex是一套媒体播放器及媒体服务器软件，让用户整理在设备上的有声书、音乐、播客、图片和视频文件，以供流至移动设备、智能电视和电子媒体播放器上。Plex可用于Windows、Android、Linux、OS X和FreeBSD。</p><p><a href="https://www.plex.tv/" target="_blank" rel="noopener">Plex 官网</a></p><h2 id="OpenELEC"><a href="#OpenELEC" class="headerlink" title="OpenELEC"></a>OpenELEC</h2><p>OpenELEC是一个为家庭剧院个人电脑设计的Linux发行版，基于Kodi媒体播放器。 OpenELEC的设计使得它消耗较少资源并且可以迅速从闪存启动。 OpenELEC也有适用于树莓派的磁盘镜像。</p><p><a href="https://openelec.tv/" target="_blank" rel="noopener">OpenELEC 官网</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;HTPC&quot;&gt;&lt;a href=&quot;#HTPC&quot; class=&quot;headerlink&quot; title=&quot;HTPC&quot;&gt;&lt;/a&gt;HTPC&lt;/h2&gt;&lt;p&gt;家庭剧院个人电脑，家庭剧院电脑，作为视讯或音频拨放或数位照片浏览的电脑。连接到电视去显示，通常使用遥控器操作，而不是使用键盘
      
    
    </summary>
    
    
      <category term="entertainment" scheme="linziye.com/tags/entertainment/"/>
    
  </entry>
  
  <entry>
    <title>win+python+atom 环境搭建备忘</title>
    <link href="linziye.com/2018/01/17/make-dev-env-with-win-python-atom/"/>
    <id>linziye.com/2018/01/17/make-dev-env-with-win-python-atom/</id>
    <published>2018-01-17T01:14:26.000Z</published>
    <updated>2018-01-18T00:43:05.762Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>在win7 平台安装Python3.6 开发环境，并使用Atom 作为IDE工具。</p><h2 id="搭建顺序"><a href="#搭建顺序" class="headerlink" title="搭建顺序"></a>搭建顺序</h2><ol><li>win7 sp1 和 <a href="https://www.microsoft.com/zh-cn/download/details.aspx?id=49093" target="_blank" rel="noopener">KB2999226 补丁包</a></li><li><a href="https://www.python.org/downloads/" target="_blank" rel="noopener">Python3.6</a></li><li><a href="https://atom.io/" target="_blank" rel="noopener">Atom</a></li><li>将python 和 atom 加入环境变量PATH</li></ol><a id="more"></a><h2 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h2><ul><li>汉化（不推荐） <a href="https://atom.io/packages/simplified-chinese-menu" target="_blank" rel="noopener">simplified-chinese-menu</a></li><li>脚本运行工具 <a href="https://atom.io/packages/atom-runner" target="_blank" rel="noopener">atom-runner</a></li><li>python 代码自动补全 <a href="https://atom.io/packages/autocomplete-python" target="_blank" rel="noopener">autocomplete-python</a></li><li>python 语法检查 <a href="https://atom.io/packages/linter-flake8" target="_blank" rel="noopener">linter-flake8</a></li><li>python 定义跳转 <a href="https://atom.io/packages/python-tools" target="_blank" rel="noopener">python-tools</a></li></ul><h2 id="Atom-快捷键"><a href="#Atom-快捷键" class="headerlink" title="Atom 快捷键"></a>Atom 快捷键</h2><ul><li>调出命令框 <code>ctrl+shift+p</code></li><li>文件类型设置 <code>ctrl+shift+l</code></li></ul><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h4 id="1-丢失“api-ms-win-crt-runtime-l1-1-0-dll”-错误提示"><a href="#1-丢失“api-ms-win-crt-runtime-l1-1-0-dll”-错误提示" class="headerlink" title="1. 丢失“api-ms-win-crt-runtime-l1-1-0.dll” 错误提示"></a>1. 丢失“api-ms-win-crt-runtime-l1-1-0.dll” 错误提示</h4><ul><li>问题描述：Python3.6 安装完成，运行时报错<code>api-ms-win-crt-runtime-l1-1-0.dll</code>丢失  </li><li>解决方案：安装KB2999226 补丁包（注意win系统是32位还是64位）  </li></ul><h4 id="2-Atom-安装package-时报错“connect-ETIMEDOUT-54-197-251-22-443”"><a href="#2-Atom-安装package-时报错“connect-ETIMEDOUT-54-197-251-22-443”" class="headerlink" title="2. Atom 安装package 时报错“connect ETIMEDOUT 54.197.251.22:443”"></a>2. Atom 安装package 时报错“connect ETIMEDOUT 54.197.251.22:443”</h4><ul><li>问题描述：在Atom 中<code>install package</code> 时，报错“connect ETIMEDOUT 54.197.251.22:443”  </li><li>解决方案：在cmd 中执行语句<code>apm config set strict-ssl false</code> (<a href="http://flight-manual.atom.io/getting-started/sections/installing-atom/" target="_blank" rel="noopener">参考链接</a>)  </li></ul><h4 id="3-Python-安装后找不到pip"><a href="#3-Python-安装后找不到pip" class="headerlink" title="3. Python 安装后找不到pip"></a>3. Python 安装后找不到pip</h4><ul><li>问题描述：Python 安装后在<code>Scripts</code> 目录下找不到<code>pip</code></li><li>解决方案：在cmd 中执行语句<code>python -m ensurepip</code> (<a href="https://docs.python.org/3/library/ensurepip.html" target="_blank" rel="noopener">参考链接</a>)。执行成功，在<code>Scripts</code> 目录下出现3个可执行文件<code>easy_install-3.6.exe</code> 、<code>pip3.6.exe</code> 和<code>pip3.exe</code></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h2&gt;&lt;p&gt;在win7 平台安装Python3.6 开发环境，并使用Atom 作为IDE工具。&lt;/p&gt;
&lt;h2 id=&quot;搭建顺序&quot;&gt;&lt;a href=&quot;#搭建顺序&quot; class=&quot;headerlink&quot; title=&quot;搭建顺序&quot;&gt;&lt;/a&gt;搭建顺序&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;win7 sp1 和 &lt;a href=&quot;https://www.microsoft.com/zh-cn/download/details.aspx?id=49093&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;KB2999226 补丁包&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.python.org/downloads/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Python3.6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Atom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;将python 和 atom 加入环境变量PATH&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Python" scheme="linziye.com/categories/Python/"/>
    
    
      <category term="Python" scheme="linziye.com/tags/Python/"/>
    
      <category term="Win" scheme="linziye.com/tags/Win/"/>
    
      <category term="Atom" scheme="linziye.com/tags/Atom/"/>
    
  </entry>
  
  <entry>
    <title>Conda 操作入门（常用命令）</title>
    <link href="linziye.com/2017/11/02/introduction-to-conda-operations-(comonly-used-comands)/"/>
    <id>linziye.com/2017/11/02/introduction-to-conda-operations-(comonly-used-comands)/</id>
    <published>2017-11-02T06:54:22.000Z</published>
    <updated>2017-11-02T13:29:33.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Conda is an open source package management system and environment management system that runs on Windows, macOS and Linux. Conda quickly installs, runs and updates packages and their dependencies. Conda easily creates, saves, loads and switches between environments on your local computer. It was created for Python programs, but it can package and distribute software for any language.</p></blockquote><p>Anaconda 基于Conda ，Conda 的入门操作参考<a href="https://conda.io/docs/user-guide/getting-started.html" target="_blank" rel="noopener">Conda Getting started</a></p><h2 id="Managing-conda"><a href="#Managing-conda" class="headerlink" title="Managing conda"></a>Managing conda</h2><ol><li><p>获取Conda 版本</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda --version</span><br></pre></td></tr></table></figure></li><li><p>更新Conda 版本</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda update conda</span><br></pre></td></tr></table></figure></li><li><p>帮助</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conda --<span class="built_in">help</span></span><br><span class="line"><span class="comment">## or</span></span><br><span class="line">conda -h</span><br></pre></td></tr></table></figure></li></ol><a id="more"></a><h2 id="Managing-environments"><a href="#Managing-environments" class="headerlink" title="Managing environments"></a><a name="Managing-environments">Managing environments</a></h2><ol><li><p>创建运行环境</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ conda create --name snowflakes biopython</span><br><span class="line"><span class="comment">## or</span></span><br><span class="line">$ conda create -n snowflakes biopython</span><br></pre></td></tr></table></figure><p> 说明：上述指令创建一个名为<code>snowflakes</code> 的运行环境，并安装包<code>biopython</code> 。该运行环境默认下载存放到conda 安装目录的<code>envs</code> 目录下</p><p> 若希望安装制定的Python版本，则执行命令如下：</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create --name bunnies python=3.5 astroid babel</span><br></pre></td></tr></table></figure><p> 说明：上述指令创建一个名为<code>bunnies</code> 的运行环境，并安装<code>python3.5</code> 、<code>astroid</code> 和<code>babel</code> 。注意需要 <strong>一次性安装所有程序包</strong>，否则一个个单独安装可能导致依赖冲突。</p></li><li><p>激活使用运行环境<br> 希望激活使用某个指定的运行环境，或者从现有运行环境切换到指定的运行环境，采用如下命令：</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> activate snowflakes</span><br></pre></td></tr></table></figure><p> 说明：上述指令运行于<code>Linux</code> 和<code>macOS</code> ，若是<code>Windows</code> ，则是指令<code>activate snowflakes</code></p></li><li><p>展现运行环境列表</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda info --envs</span><br></pre></td></tr></table></figure></li><li><p>退出指定运行环境（退回到 root）</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> deactivate</span><br></pre></td></tr></table></figure><p> 说明：上述指令运行于<code>Linux</code> 和<code>macOS</code> ，若是<code>Windows</code> 操作系统，则是指令<code>deactivate</code></p></li><li><p>运行环境克隆</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda create --name flowers --<span class="built_in">clone</span> snowflakes</span><br></pre></td></tr></table></figure><p> 说明：上述指令克隆运行环境<code>snowflakes</code> ，生成新的运行环境<code>flowers</code></p></li><li><p>删除运行环境</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda remove --name flowers --all</span><br></pre></td></tr></table></figure></li></ol><h2 id="Managing-Python"><a href="#Managing-Python" class="headerlink" title="Managing Python"></a>Managing Python</h2><p>Conda 处理Python 和处理其他程序包是一样的，故大部分指令和章节<a href="#Managing-environments">Managing environments</a> 是一样的。</p><ol><li>列出可用的Python 版本 <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda search --full-name python</span><br></pre></td></tr></table></figure></li></ol><h2 id="Managing-packages"><a href="#Managing-packages" class="headerlink" title="Managing packages"></a>Managing packages</h2><ol><li><p>列出当前运行环境下已安装的程序包</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda list</span><br></pre></td></tr></table></figure></li><li><p>列出仓库源中指定程序包的信息</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda search beautifulsoup4</span><br></pre></td></tr></table></figure><p> 说明：<code>beautifulsoup4</code> 是程序包名</p></li><li><p>安装指定程序包</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda install --name bunnies beautifulsoup4</span><br></pre></td></tr></table></figure><p> 说明：该指令安装程序包<code>beautifulsoup4</code> 到运行环境<code>bunnies</code> 中；若不包含<code>--name bunnies</code> ，则安装<code>beautifulsoup4</code> 到当前运行环境</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Conda is an open source package management system and environment management system that runs on Windows, macOS and Linux. Conda quickly installs, runs and updates packages and their dependencies. Conda easily creates, saves, loads and switches between environments on your local computer. It was created for Python programs, but it can package and distribute software for any language.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Anaconda 基于Conda ，Conda 的入门操作参考&lt;a href=&quot;https://conda.io/docs/user-guide/getting-started.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Conda Getting started&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Managing-conda&quot;&gt;&lt;a href=&quot;#Managing-conda&quot; class=&quot;headerlink&quot; title=&quot;Managing conda&quot;&gt;&lt;/a&gt;Managing conda&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;获取Conda 版本&lt;/p&gt;
 &lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ conda --version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;更新Conda 版本&lt;/p&gt;
 &lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ conda update conda&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;帮助&lt;/p&gt;
 &lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;conda --&lt;span class=&quot;built_in&quot;&gt;help&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;## or&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;conda -h&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Python" scheme="linziye.com/categories/Python/"/>
    
    
      <category term="Python" scheme="linziye.com/tags/Python/"/>
    
      <category term="Conda" scheme="linziye.com/tags/Conda/"/>
    
  </entry>
  
  <entry>
    <title>Anaconda 官方源下载慢的解决方案</title>
    <link href="linziye.com/2017/11/02/anaconda-oficial-source-download-slow-solution/"/>
    <id>linziye.com/2017/11/02/anaconda-oficial-source-download-slow-solution/</id>
    <published>2017-11-02T00:07:59.000Z</published>
    <updated>2017-11-02T08:44:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>下载安装Anaconda 后，需要下载pandas 等包，发现默认的官方源下载慢。<br>搜索解决方案，发现<a href="https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/" target="_blank" rel="noopener">TUNA</a> 提供了Anaconda 仓库的镜像。按照指示步骤操作如下：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config --<span class="built_in">set</span> show_channel_urls yes</span><br></pre></td></tr></table></figure></p><p>经测试，果然快了许多！</p><a id="more"></a><p>上述2 行命令的效果，即修改文件<code>～/.condarc</code> 。<br>该文件原内容是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">channels:</span><br><span class="line">  - defaults</span><br><span class="line">ssl_verify: true</span><br></pre></td></tr></table></figure></p><p>修改后（即执行命令后）内容是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">channels:</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">  - defaults</span><br><span class="line">ssl_verify: true</span><br><span class="line">show_channel_urls: true</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;下载安装Anaconda 后，需要下载pandas 等包，发现默认的官方源下载慢。&lt;br&gt;搜索解决方案，发现&lt;a href=&quot;https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;TUNA&lt;/a&gt; 提供了Anaconda 仓库的镜像。按照指示步骤操作如下：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;conda config --&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; show_channel_urls yes&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;经测试，果然快了许多！&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="linziye.com/categories/Python/"/>
    
    
      <category term="Python" scheme="linziye.com/tags/Python/"/>
    
      <category term="Anaconda" scheme="linziye.com/tags/Anaconda/"/>
    
  </entry>
  
  <entry>
    <title>Setting Custom domain</title>
    <link href="linziye.com/2017/09/23/seting-custom-domain/"/>
    <id>linziye.com/2017/09/23/seting-custom-domain/</id>
    <published>2017-09-23T15:29:47.000Z</published>
    <updated>2017-11-02T08:44:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>我在阿里云上注册了一个域名 <code>linziye.com</code> ，希望能指向我的Github Pages 博客 <code>linpeng13.github.io</code> ，操作步骤如下：</p><blockquote><p>劳资的域名 <code>linpeng.com</code> 已被注册，只好先用儿子的了 -_-!!!</p></blockquote><p>第1步：创建CNAME 文件</p><p>我的Github Pages 博客采用Hexo 框架，故需要在<code>source</code> 目录下创建CNAME 文件。本质上就是在站点（推送到Github Pages 的博客站点）根目录下创建CNAME 文件。</p><p>CNAME 文件内容是<code>linziye.com</code><br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cat CNAME</span><br><span class="line">linziye.com</span><br></pre></td></tr></table></figure></p><p>Github Pages 服务器读取<code>CNAME</code> 之后，会设置<code>linziye.com</code> 为主域名（Custom domain），然后将<code>linpeng13.github.io</code> 重定向到<code>linziye.com</code> 。</p><a id="more"></a><p>第2步：域名解析</p><p>登录阿里云-&gt;管理控制台-&gt;域名，在<code>linziye.com</code> 域名解析设置中增加3条记录，即：<br><img src="/2017/09/23/seting-custom-domain/1.png"></p><p>在域名解析中，A 记录就是直接指定一个IP ，CNAME 就是重命名，指向另一个域名。</p><ol><li>在阿里云控制台，设置记录类型为<code>A</code> ，主机记录为<code>@</code> ，记录值是IP <code>192.30.252.153</code> ，其中<code>192.30.252.153</code> 是Github Pages 服务器指定的IP地址，访问该IP地址即表示访问Github Pages ；</li><li>在阿里云控制台，设置记录类型为<code>A</code> ，主机记录为<code>@</code> ，记录值是IP <code>192.30.252.154</code> ，原理同上；</li><li>在阿里云控制台，设置记录类型为<code>CNAME</code> ，主机记录为<code>www</code> ，记录值是<code>linpeng13.github.io.</code> ，注意记录值中<code>.io</code> <strong>后面还有一个点<code>.</code> </strong></li></ol><p>第3步：等待DNS 配置生效</p><p>对DNS 的配置不是立即生效的，过10分钟再去访问域名 <code>linziye.com</code> ，看看是否配置成功</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我在阿里云上注册了一个域名 &lt;code&gt;linziye.com&lt;/code&gt; ，希望能指向我的Github Pages 博客 &lt;code&gt;linpeng13.github.io&lt;/code&gt; ，操作步骤如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;劳资的域名 &lt;code&gt;linpeng.com&lt;/code&gt; 已被注册，只好先用儿子的了 -_-!!!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第1步：创建CNAME 文件&lt;/p&gt;
&lt;p&gt;我的Github Pages 博客采用Hexo 框架，故需要在&lt;code&gt;source&lt;/code&gt; 目录下创建CNAME 文件。本质上就是在站点（推送到Github Pages 的博客站点）根目录下创建CNAME 文件。&lt;/p&gt;
&lt;p&gt;CNAME 文件内容是&lt;code&gt;linziye.com&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cat CNAME&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;linziye.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Github Pages 服务器读取&lt;code&gt;CNAME&lt;/code&gt; 之后，会设置&lt;code&gt;linziye.com&lt;/code&gt; 为主域名（Custom domain），然后将&lt;code&gt;linpeng13.github.io&lt;/code&gt; 重定向到&lt;code&gt;linziye.com&lt;/code&gt; 。&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="linziye.com/categories/hexo/"/>
    
    
      <category term="github" scheme="linziye.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>The Python Standard Library</title>
    <link href="linziye.com/2017/09/17/the-python-standard-library/"/>
    <id>linziye.com/2017/09/17/the-python-standard-library/</id>
    <published>2017-09-17T02:38:22.000Z</published>
    <updated>2017-11-02T08:44:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>《A Byte of Python》学习笔记</p><h2 id="sys-module"><a href="#sys-module" class="headerlink" title="sys module"></a>sys module</h2><p>The <code>sys</code> module contains system-specific functionality.</p><h2 id="os-module"><a href="#os-module" class="headerlink" title="os module"></a>os module</h2><p>The <code>os</code> module is used for interacting with the operating system.</p><p><code>os.path.join()</code> this function will ensure the full location matches the format expected by the operating system.</p><h2 id="platform-module"><a href="#platform-module" class="headerlink" title="platform module"></a>platform module</h2><p>The <code>platform</code> module is used for information about the platform i.e. the operating system.</p><h2 id="logging-module"><a href="#logging-module" class="headerlink" title="logging module"></a>logging module</h2><p>The <code>logging</code> module is used for logging information.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;《A Byte of Python》学习笔记&lt;/p&gt;
&lt;h2 id=&quot;sys-module&quot;&gt;&lt;a href=&quot;#sys-module&quot; class=&quot;headerlink&quot; title=&quot;sys module&quot;&gt;&lt;/a&gt;sys module&lt;/h2&gt;&lt;p&gt;The &lt;cod
      
    
    </summary>
    
      <category term="Python" scheme="linziye.com/categories/Python/"/>
    
    
      <category term="Python" scheme="linziye.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python built-in data structures</title>
    <link href="linziye.com/2017/09/15/python-built-in-data-structures/"/>
    <id>linziye.com/2017/09/15/python-built-in-data-structures/</id>
    <published>2017-09-15T09:23:32.000Z</published>
    <updated>2017-11-02T08:44:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>《A Byte of Python》学习笔记</p><h2 id="Data-Structures"><a href="#Data-Structures" class="headerlink" title="Data Structures"></a>Data Structures</h2><blockquote><p>There are four built-in data structures in Python - <em>list</em>, <em>tuple</em>, <em>dictionary</em> and <em>set</em>.</p><footer><strong>Swaroop C H</strong><cite>A Byte of Python</cite></footer></blockquote><h2 id="List"><a href="#List" class="headerlink" title="List"></a>List</h2><blockquote><p>A <code>list</code> is a data structure that holds an ordered collection of items</p><footer><strong>Swaroop C H</strong><cite>A Byte of Python</cite></footer></blockquote><p>Example (save as <code>ds_using_list.py</code> ):</p><figure class="highlight python"><figcaption><span>ds_using_list.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This is my shopping list</span></span><br><span class="line">shoplist = [<span class="string">'apple'</span>, <span class="string">'mango'</span>, <span class="string">'carrot'</span>, <span class="string">'banana'</span>]</span><br><span class="line"></span><br><span class="line">print(<span class="string">'I have'</span>, len(shoplist), <span class="string">'items to purchase.'</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'These items are:'</span>, end=<span class="string">' '</span>)</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> shoplist:</span><br><span class="line">    print(item, end=<span class="string">' '</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'\nI also have to buy rice.'</span>)</span><br><span class="line">shoplist.append(<span class="string">'rice'</span>)</span><br><span class="line">print(<span class="string">'My shopping list is now'</span>, shoplist)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'I will sort my list now'</span>)</span><br><span class="line">shoplist.sort()</span><br><span class="line">print(<span class="string">'Sorted shopping list is'</span>, shoplist)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'The first item I will buy is'</span>, shoplist[<span class="number">0</span>])</span><br><span class="line">olditem = shoplist[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">del</span> shoplist[<span class="number">0</span>]</span><br><span class="line">print(<span class="string">'I bought the'</span>, olditem)</span><br><span class="line">print(<span class="string">'My shopping list is now'</span>, shoplist)</span><br></pre></td></tr></table></figure><p>Output:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ python ds_using_list.py</span><br><span class="line">I have 4 items to purchase.</span><br><span class="line">These items are: apple mango carrot banana</span><br><span class="line">I also have to buy rice.</span><br><span class="line">My shopping list is now [<span class="string">'apple'</span>, <span class="string">'mango'</span>, <span class="string">'carrot'</span>, <span class="string">'banana'</span>, <span class="string">'rice'</span>]</span><br><span class="line">I will sort my list now</span><br><span class="line">Sorted shopping list is [<span class="string">'apple'</span>, <span class="string">'banana'</span>, <span class="string">'carrot'</span>, <span class="string">'mango'</span>, <span class="string">'rice'</span>]</span><br><span class="line">The first item I will buy is apple</span><br><span class="line">I bought the apple</span><br><span class="line">My shopping list is now [<span class="string">'banana'</span>, <span class="string">'carrot'</span>, <span class="string">'mango'</span>, <span class="string">'rice'</span>]</span><br></pre></td></tr></table></figure><h2 id="Tuple"><a href="#Tuple" class="headerlink" title="Tuple"></a>Tuple</h2><blockquote><p>Tuples are used to hold together multiple objects. Think of them as similar to lists, but without the extensive functionality that the list class gives you. One major feature of tuples is that they are <em>immutable</em> like strings i.e. you cannot modify tuples.</p><footer><strong>Swaroop C H</strong><cite>A Byte of Python</cite></footer></blockquote><p>Example (save as <code>ds_using_tuple.py</code> ):</p><figure class="highlight python"><figcaption><span>ds_using_tuple.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># I would recommend always using parentheses</span></span><br><span class="line"><span class="comment"># to indicate start and end of tuple</span></span><br><span class="line"><span class="comment"># even though parentheses are optional.</span></span><br><span class="line"><span class="comment"># Explicit is better than implicit.</span></span><br><span class="line">zoo = (<span class="string">'python'</span>, <span class="string">'elephant'</span>, <span class="string">'penguin'</span>)</span><br><span class="line">print(<span class="string">'Number of animals in the zoo is'</span>, len(zoo))</span><br><span class="line"></span><br><span class="line">new_zoo = <span class="string">'monkey'</span>, <span class="string">'camel'</span>, zoo</span><br><span class="line">print(<span class="string">'Number of cages in the new zoo is'</span>, len(new_zoo))</span><br><span class="line">print(<span class="string">'All animals in new zoo are'</span>, new_zoo)</span><br><span class="line">print(<span class="string">'Animals brought from old zoo are'</span>, new_zoo[<span class="number">2</span>])</span><br><span class="line">print(<span class="string">'Last animal brought from old zoo is'</span>, new_zoo[<span class="number">2</span>][<span class="number">2</span>])</span><br><span class="line">print(<span class="string">'Number of animals in the new zoo is'</span>, len(new_zoo)<span class="number">-1</span>+len(new_zoo[<span class="number">2</span>]))</span><br></pre></td></tr></table></figure><p>Output:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ python ds_using_tuple.py </span><br><span class="line">Number of animals <span class="keyword">in</span> the zoo is 3 </span><br><span class="line">Number of cages <span class="keyword">in</span> the new zoo is 3 </span><br><span class="line">All animals <span class="keyword">in</span> new zoo are (<span class="string">'monkey'</span>, <span class="string">'camel'</span>, (<span class="string">'python'</span>, <span class="string">'elephant'</span>, <span class="string">'penguin'</span>)) </span><br><span class="line">Animals brought from old zoo are (<span class="string">'python'</span>, <span class="string">'elephant'</span>, <span class="string">'penguin'</span>) </span><br><span class="line">Last animal brought from old zoo is penguin </span><br><span class="line">Number of animals <span class="keyword">in</span> the new zoo is 5</span><br></pre></td></tr></table></figure><h2 id="Dictionary"><a href="#Dictionary" class="headerlink" title="Dictionary"></a>Dictionary</h2><blockquote><p>A dictionary is like an address-book where you can find the address or contact details of a person by knowing only his/her name i.e. we associate <em>keys</em> (name) with <em>values</em> (details). Note that the key must be unique just like you cannot find out the correct information if you have two persons with the exact same name.</p><footer><strong>Swaroop C H</strong><cite>A Byte of Python</cite></footer></blockquote><p>Example (save as <code>ds_using_dict.py</code> ):</p><figure class="highlight python"><figcaption><span>ds_using_dict.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 'ab' is short for 'a'ddress'b'ook </span></span><br><span class="line"></span><br><span class="line">ab = &#123; </span><br><span class="line">    <span class="string">'Swaroop'</span>: <span class="string">'swaroop@swaroopch.com'</span>, </span><br><span class="line">    <span class="string">'Larry'</span>: <span class="string">'larry@wall.org'</span>, </span><br><span class="line">    <span class="string">'Matsumoto'</span>: <span class="string">'matz@ruby-lang.org'</span>, </span><br><span class="line">    <span class="string">'Spammer'</span>: <span class="string">'spammer@hotmail.com'</span> </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">print(<span class="string">"Swaroop's address is"</span>, ab[<span class="string">'Swaroop'</span>]) </span><br><span class="line"></span><br><span class="line"><span class="comment"># Deleting a key-value pair </span></span><br><span class="line"><span class="keyword">del</span> ab[<span class="string">'Spammer'</span>] </span><br><span class="line"></span><br><span class="line">print(<span class="string">'\nThere are &#123;&#125; contacts in the address-book\n'</span>.format(len(ab))) </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> name, address <span class="keyword">in</span> ab.items(): </span><br><span class="line">    print(<span class="string">'Contact &#123;&#125; at &#123;&#125;'</span>.format(name, address)) </span><br><span class="line"></span><br><span class="line"><span class="comment"># Adding a key-value pair </span></span><br><span class="line">ab[<span class="string">'Guido'</span>] = <span class="string">'guido@python.org'</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">'Guido'</span> <span class="keyword">in</span> ab: </span><br><span class="line">    print(<span class="string">"\nGuido's address is"</span>, ab[<span class="string">'Guido'</span>])</span><br></pre></td></tr></table></figure><p>Output:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ python ds_using_dict.py </span><br><span class="line">Swaroop<span class="string">'s address is swaroop@swaroopch.com </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">There are 3 contacts in the address-book </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Contact Swaroop at swaroop@swaroopch.com </span></span><br><span class="line"><span class="string">Contact Matsumoto at matz@ruby-lang.org </span></span><br><span class="line"><span class="string">Contact Larry at larry@wall.org </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Guido'</span>s address is guido@python.org</span><br></pre></td></tr></table></figure><h2 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h2><blockquote><p>Sets are <em>unordered</em> collections of simple objects. These are used when the existence of an object in a collection is more important than the order or how many times it occurs.</p><footer><strong>Swaroop C H</strong><cite>A Byte of Python</cite></footer></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>bri = set([<span class="string">'brazil'</span>, <span class="string">'russia'</span>, <span class="string">'india'</span>]) </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'india'</span> <span class="keyword">in</span> bri </span><br><span class="line"><span class="keyword">True</span> </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'usa'</span> <span class="keyword">in</span> bri </span><br><span class="line"><span class="keyword">False</span> </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bric = bri.copy() </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bric.add(<span class="string">'china'</span>) </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bric.issuperset(bri) </span><br><span class="line"><span class="keyword">True</span> </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bri.remove(<span class="string">'russia'</span>) </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bri &amp; bric <span class="comment"># OR bri.intersection(bric) </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>&#123;<span class="string">'brazil'</span>, <span class="string">'india'</span>&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;《A Byte of Python》学习笔记&lt;/p&gt;
&lt;h2 id=&quot;Data-Structures&quot;&gt;&lt;a href=&quot;#Data-Structures&quot; class=&quot;headerlink&quot; title=&quot;Data Structures&quot;&gt;&lt;/a&gt;Data Struct
      
    
    </summary>
    
      <category term="Python" scheme="linziye.com/categories/Python/"/>
    
    
      <category term="Python" scheme="linziye.com/tags/Python/"/>
    
      <category term="shell" scheme="linziye.com/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 系统用户登录调用的文件（或环境变量）</title>
    <link href="linziye.com/2017/09/05/the-ubuntu-system-cal-user-login-file-(or-environment-variables)/"/>
    <id>linziye.com/2017/09/05/the-ubuntu-system-cal-user-login-file-(or-environment-variables)/</id>
    <published>2017-09-05T06:14:35.000Z</published>
    <updated>2017-11-02T08:44:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="调用顺序"><a href="#调用顺序" class="headerlink" title="调用顺序"></a>调用顺序</h2><p>普通用户登录Ubuntu 系统一般会依次调用如下配置文件：</p><ol><li><strong>/etc/environment</strong>：在登录时操作系统使用的<strong>第一</strong>个文件，设置系统默认的环境变量；</li><li><strong>/etc/profile</strong>：在登录时操作系统定制用户环境时使用的<strong>第二个</strong>文件，此文件为系统的每个用户设置默认的变量，当用户第一次登录时，该文件被执行；</li><li><strong>~/.bash_profile</strong>：登录用户的环境变量设置；</li><li><strong>~/.profile</strong>：登录用户环境变量设置（若不存在 <code>~/.bash_profile</code> 文件时执行）；</li></ol><a id="more"></a><h2 id="etc-environment"><a href="#etc-environment" class="headerlink" title="/etc/environment"></a>/etc/environment</h2><p>该文件默认的内容如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PATH=<span class="string">"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games"</span></span><br></pre></td></tr></table></figure><p>若需要配置系统用户均需要用到的环境变量，例如JAVA 相关，可增加如下内容：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME=<span class="string">"/usr/jdk1.8.0_144"</span></span><br><span class="line">JRE_HOME=<span class="string">"/usr/jdk1.8.0_144/jre"</span></span><br></pre></td></tr></table></figure><h2 id="etc-profile"><a href="#etc-profile" class="headerlink" title="/etc/profile"></a>/etc/profile</h2><p>该文件默认的内容如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /etc/profile: system-wide .profile file for the Bourne shell (sh(1))</span></span><br><span class="line"><span class="comment"># and Bourne compatible shells (bash(1), ksh(1), ash(1), ...).</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$PS1</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">if</span> [ <span class="string">"<span class="variable">$BASH</span>"</span> ] &amp;&amp; [ <span class="string">"<span class="variable">$BASH</span>"</span> != <span class="string">"/bin/sh"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="comment"># The file bash.bashrc already sets the default PS1.</span></span><br><span class="line">    <span class="comment"># PS1='\h:\w\$ '</span></span><br><span class="line">    <span class="keyword">if</span> [ -f /etc/bash.bashrc ]; <span class="keyword">then</span></span><br><span class="line">      . /etc/bash.bashrc</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">"`id -u`"</span> -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">      PS1=<span class="string">'# '</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      PS1=<span class="string">'$ '</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -d /etc/profile.d ]; <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> /etc/profile.d/*.sh; <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ -r <span class="variable">$i</span> ]; <span class="keyword">then</span></span><br><span class="line">      . <span class="variable">$i</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line">  <span class="built_in">unset</span> i</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>该文件关键点分析如下：</p><ol><li>若环境变量 <code>BASH</code> 存在且非 <code>/bin/sh</code> ，则执行配置文件 <code>/etc/bash.bashrc</code> ；</li><li>若不满足第1点，则按照<code>root</code> 用户为<code>#</code> ，其他用户为<code>$</code> 设置提示符；</li><li>依次执行目录 <code>/etc/profile.d</code> 下的配置文件；</li></ol><h2 id="profile"><a href="#profile" class="headerlink" title="~/.profile"></a>~/.profile</h2><p>该文件默认的内容如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ~/.profile: executed by the command interpreter for login shells.</span></span><br><span class="line"><span class="comment"># This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login</span></span><br><span class="line"><span class="comment"># exists.</span></span><br><span class="line"><span class="comment"># see /usr/share/doc/bash/examples/startup-files for examples.</span></span><br><span class="line"><span class="comment"># the files are located in the bash-doc package.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># the default umask is set in /etc/profile; for setting the umask</span></span><br><span class="line"><span class="comment"># for ssh logins, install and configure the libpam-umask package.</span></span><br><span class="line"><span class="comment">#umask 022</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># if running bash</span></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$BASH_VERSION</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="comment"># include .bashrc if it exists</span></span><br><span class="line">    <span class="keyword">if</span> [ -f <span class="string">"<span class="variable">$HOME</span>/.bashrc"</span> ]; <span class="keyword">then</span></span><br><span class="line">        . <span class="string">"<span class="variable">$HOME</span>/.bashrc"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># set PATH so it includes user's private bin directories</span></span><br><span class="line">PATH=<span class="string">"<span class="variable">$HOME</span>/bin:<span class="variable">$HOME</span>/.local/bin:<span class="variable">$PATH</span>"</span></span><br></pre></td></tr></table></figure><p>注意如下说明：</p><blockquote><p>This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login exists.</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;调用顺序&quot;&gt;&lt;a href=&quot;#调用顺序&quot; class=&quot;headerlink&quot; title=&quot;调用顺序&quot;&gt;&lt;/a&gt;调用顺序&lt;/h2&gt;&lt;p&gt;普通用户登录Ubuntu 系统一般会依次调用如下配置文件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;/etc/environment&lt;/strong&gt;：在登录时操作系统使用的&lt;strong&gt;第一&lt;/strong&gt;个文件，设置系统默认的环境变量；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/etc/profile&lt;/strong&gt;：在登录时操作系统定制用户环境时使用的&lt;strong&gt;第二个&lt;/strong&gt;文件，此文件为系统的每个用户设置默认的变量，当用户第一次登录时，该文件被执行；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;~/.bash_profile&lt;/strong&gt;：登录用户的环境变量设置；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;~/.profile&lt;/strong&gt;：登录用户环境变量设置（若不存在 &lt;code&gt;~/.bash_profile&lt;/code&gt; 文件时执行）；&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Linux" scheme="linziye.com/categories/Linux/"/>
    
    
      <category term="Ubuntu" scheme="linziye.com/tags/Ubuntu/"/>
    
      <category term="Linux" scheme="linziye.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 系统用户和用户组</title>
    <link href="linziye.com/2017/09/05/ubuntu-system-user-and-user-group/"/>
    <id>linziye.com/2017/09/05/ubuntu-system-user-and-user-group/</id>
    <published>2017-09-05T02:55:18.000Z</published>
    <updated>2017-11-02T08:44:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="etc-passwd"><a href="#etc-passwd" class="headerlink" title="/etc/passwd"></a>/etc/passwd</h2><p>查看Ubuntu 系统存在的用户信息，可执行：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd</span><br></pre></td></tr></table></figure><p>该文件每行代表一个用户，格式为：<em>用户名:口令:用户标识号:组标识号:注释性描述:主目录:登录Shell</em></p><p>例如：<code>hadoop:x:1000:1000:hadoop-01,,,:/home/hadoop:/bin/bash</code></p><ul><li>用户名：hadoop</li><li>口令：x（详见下节 “/etc/shadow”）</li><li>用户标识号：1000</li><li>组标识号：1000</li><li>注释性描述：hadoop-01,,,</li><li>主目录：/home/hadoop</li><li>登录Shell：/bin/bash</li></ul><a id="more"></a><h2 id="etc-shadow"><a href="#etc-shadow" class="headerlink" title="/etc/shadow"></a>/etc/shadow</h2><p>Unix系统最初是用明文保存密码的，后来由于安全的考虑，采用crypt() 算法加密密码并存放在 <code>/etc/passwd</code> 文件。现在，由于计算机处理能力的提高，使密码破解变得越来越容易。<code>/etc/passwd</code> 文件是所有合法用户都可访问的，大家都可互相看到密码的加密字符串，这给系统带来很大的安全威胁。现代的Unix系统使用影子密码系统，它把密码从<code>/etc/passwd</code> 文件中分离出来，真正的密码保存在<code>/etc/shadow</code> 文件中，该文件只能由超级用户访问。这样入侵者就不能获得加密密码串，用于破解。使用shadow 密码文件后，<code>/etc/passwd</code> 文件中所有帐户的password 域的内容为”x”，如果password 域的内容为”*”，则该帐号被停用。</p><p>格式为：<em>username:password:last_change:min_change:max_change:warm:failed_expire:expiration:reserved</em></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cat /etc/shadow</span><br></pre></td></tr></table></figure><p>例如：<code>hadoop:$1$dwXYMXgF$4Tqzw9pwsUCsYAWmJEgak/:17381:0:99999:7:::</code></p><ul><li>username：hadoop</li><li>password：$1$dwXYMXgF$4Tqzw9pwsUCsYAWmJEgak/</li><li>last_change：17381（最近更改密码的日期，其是以1970年1月1日做为第1天，然后顺次相加）</li><li>min_change：0（密码不可更改的天数，即如果你不想让某个用户频繁更改密码就可以把这个设成10000）</li><li>max_change：99999（密码需要重新更改的天数，即密码在多少天内必须得改了）</li><li>warm：7（密码更改期限前的警告日期）</li><li>failed_expire：（密码过期的宽限时间）</li><li>expiration：（账号失效时间）</li><li>reserved：</li></ul><h2 id="etc-group"><a href="#etc-group" class="headerlink" title="/etc/group"></a>/etc/group</h2><p>查看Ubuntu 系统存在的组信息，可执行：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/group</span><br></pre></td></tr></table></figure><p>该文件每行代表一个组，格式为：<em>groupname:password:gid:members</em></p><p>例如：<code>hadoop:x:1000:</code></p><ul><li>groupname：hadoop</li><li>password：x（同上节 “/etc/shadow”）</li><li>gid：组标识号</li><li>members：组内成员</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;etc-passwd&quot;&gt;&lt;a href=&quot;#etc-passwd&quot; class=&quot;headerlink&quot; title=&quot;/etc/passwd&quot;&gt;&lt;/a&gt;/etc/passwd&lt;/h2&gt;&lt;p&gt;查看Ubuntu 系统存在的用户信息，可执行：&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat /etc/passwd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该文件每行代表一个用户，格式为：&lt;em&gt;用户名:口令:用户标识号:组标识号:注释性描述:主目录:登录Shell&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;例如：&lt;code&gt;hadoop:x:1000:1000:hadoop-01,,,:/home/hadoop:/bin/bash&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用户名：hadoop&lt;/li&gt;
&lt;li&gt;口令：x（详见下节 “/etc/shadow”）&lt;/li&gt;
&lt;li&gt;用户标识号：1000&lt;/li&gt;
&lt;li&gt;组标识号：1000&lt;/li&gt;
&lt;li&gt;注释性描述：hadoop-01,,,&lt;/li&gt;
&lt;li&gt;主目录：/home/hadoop&lt;/li&gt;
&lt;li&gt;登录Shell：/bin/bash&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Linux" scheme="linziye.com/categories/Linux/"/>
    
    
      <category term="Ubuntu" scheme="linziye.com/tags/Ubuntu/"/>
    
      <category term="Linux" scheme="linziye.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Hexo NexT主题文章页头页尾的一些设置</title>
    <link href="linziye.com/2017/09/03/some-hexo-next-set-the-page-header-foter./"/>
    <id>linziye.com/2017/09/03/some-hexo-next-set-the-page-header-foter./</id>
    <published>2017-09-03T09:51:17.000Z</published>
    <updated>2017-11-02T08:44:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="页头"><a href="#页头" class="headerlink" title="页头"></a>页头</h2><p><img src="/uploads/2017-09-03/header.png" alt="页头"><br>NexT 主题的文章页面，默认只有【发表时间】和【分类】两项信息。若希望增加其他有意思的信息，得做一些设置。</p><h3 id="阅读次数"><a href="#阅读次数" class="headerlink" title="阅读次数"></a>阅读次数</h3><p>增加【阅读次数】信息，需要用到第三方的服务<a href="https://leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a> ，且需要修改<strong>主题配置文件</strong><code>themes/next/_config.yml</code> 。<br>详细的操作可参考这篇博文《<a href="http://www.joryhe.com/2016-05-29-how_to_create_leancloud_read_Counter.html" target="_blank" rel="noopener">leanCloud,实现文章阅读量统计</a>》。</p><a id="more"></a><h3 id="字数统计和阅读时长"><a href="#字数统计和阅读时长" class="headerlink" title="字数统计和阅读时长"></a>字数统计和阅读时长</h3><p>增加【字数统计】和【阅读时长】信息，需安装插件<a href="https://github.com/willin/hexo-wordcount" target="_blank" rel="noopener">hexo-wordcount</a> ，安装方法相对简单：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ npm i --save hexo-wordcount</span><br><span class="line"></span><br><span class="line"><span class="comment">## Node 版本7.6.0之前,请安装 2.x 版本 (Node.js v7.6.0 and previous)</span></span><br><span class="line">$ npm install hexo-wordcount@2 --save</span><br></pre></td></tr></table></figure><p>然后在<strong>主题配置文件</strong><code>themes/next/_config.yml</code> 中，找到字段 <code>post_wordcount</code> ，其设置块内容默认是：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/willin/hexo-wordcount</span></span><br><span class="line">post_wordcount:</span><br><span class="line">  item_text: <span class="literal">true</span></span><br><span class="line">  wordcount: <span class="literal">false</span></span><br><span class="line">  min2read: <span class="literal">false</span></span><br><span class="line">  totalcount: <span class="literal">false</span></span><br><span class="line">  separated_meta: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>字段<code>wordcount</code> 是文章的<strong>字数统计</strong>，字段<code>min2read</code>是文章的<strong>阅读时长</strong>预估值，这两个值默认显示在文章开头（如图）。<br>字段<code>totalcount</code>是整站的<strong>字数统计</strong>，默认显示在站点页面最下方。<br>按需要将<code>false</code> 修改为<code>true</code>即可。</p><p>但默认开启的【字数统计】和【阅读时长】信息，是不包含单位的，故有强迫症的朋友，可以修订文件<code>themes/next/layout/_macro/post.swig</code> ，在<code>wordcount(post.content)</code> 所在行加<code>(字)</code> ，在<code>min2read(post.content)</code> 所在行加<code>(分)</code> 。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.post_wordcount.wordcount or theme.post_wordcount.min2read %&#125;</span><br><span class="line">  &lt;div class=<span class="string">"post-wordcount"</span>&gt;</span><br><span class="line">    &#123;% <span class="keyword">if</span> theme.post_wordcount.wordcount %&#125;</span><br><span class="line">      &#123;% <span class="keyword">if</span> not theme.post_wordcount.separated_meta %&#125;</span><br><span class="line">        &lt;span class=<span class="string">"post-meta-divider"</span>&gt;|&lt;/span&gt;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">      &lt;span class=<span class="string">"post-meta-item-icon"</span>&gt;</span><br><span class="line">        &lt;i class=<span class="string">"fa fa-file-word-o"</span>&gt;&lt;/i&gt;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">      &#123;% <span class="keyword">if</span> theme.post_wordcount.item_text %&#125;</span><br><span class="line">        &lt;span class=<span class="string">"post-meta-item-text"</span>&gt;&#123;&#123; __(<span class="string">'post.wordcount'</span>) &#125;&#125;&amp;<span class="comment">#58;&lt;/span&gt;</span></span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">      &lt;span title=<span class="string">"&#123;&#123; __('post.wordcount') &#125;&#125;"</span>&gt;</span><br><span class="line">        &#123;&#123; wordcount(post.content) &#125;&#125;(字)</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">    &#123;% <span class="keyword">if</span> theme.post_wordcount.wordcount and theme.post_wordcount.min2read %&#125;</span><br><span class="line">      &lt;span class=<span class="string">"post-meta-divider"</span>&gt;|&lt;/span&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">    &#123;% <span class="keyword">if</span> theme.post_wordcount.min2read %&#125;</span><br><span class="line">      &lt;span class=<span class="string">"post-meta-item-icon"</span>&gt;</span><br><span class="line">        &lt;i class=<span class="string">"fa fa-clock-o"</span>&gt;&lt;/i&gt;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">      &#123;% <span class="keyword">if</span> theme.post_wordcount.item_text %&#125;</span><br><span class="line">        &lt;span class=<span class="string">"post-meta-item-text"</span>&gt;&#123;&#123; __(<span class="string">'post.min2read'</span>) &#125;&#125; &amp;asymp;&lt;/span&gt;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">      &lt;span title=<span class="string">"&#123;&#123; __('post.min2read') &#125;&#125;"</span>&gt;</span><br><span class="line">        &#123;&#123; min2read(post.content) &#125;&#125;(分)</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h2 id="页尾"><a href="#页尾" class="headerlink" title="页尾"></a>页尾</h2><p>NexT 主题的文章页面，想要在页尾增加文章的版权信息，如图：<br><img src="/uploads/2017-09-03/footer.png" alt="页尾"></p><p>在<strong>主题配置文件</strong><code>themes/next/_config.yml</code> 中，找到字段<code>post_copyright</code> ，将<code>enable</code> 设置为<code>true</code> 即可。</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>从上述设置，不难发现NexT 主题文章页面设置的几个重要文件，即：</p><ul><li><code>_layout.swig</code> -<code>themes/next/layout/_layout.swig</code> ，全局性的页面布局代码；</li><li><code>post.swig</code> -<code>themes/next/layout/post.swig</code> ，文章类型页面框架布局代码，其中调用了<code>_macro/post.swig</code> ；</li><li><code>_macro/post.swig</code> - themes/next/layout/_macro/post.swig` ，文章类型页面实际布局代码；</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;页头&quot;&gt;&lt;a href=&quot;#页头&quot; class=&quot;headerlink&quot; title=&quot;页头&quot;&gt;&lt;/a&gt;页头&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/uploads/2017-09-03/header.png&quot; alt=&quot;页头&quot;&gt;&lt;br&gt;NexT 主题的文章页面，默认只有【发表时间】和【分类】两项信息。若希望增加其他有意思的信息，得做一些设置。&lt;/p&gt;
&lt;h3 id=&quot;阅读次数&quot;&gt;&lt;a href=&quot;#阅读次数&quot; class=&quot;headerlink&quot; title=&quot;阅读次数&quot;&gt;&lt;/a&gt;阅读次数&lt;/h3&gt;&lt;p&gt;增加【阅读次数】信息，需要用到第三方的服务&lt;a href=&quot;https://leancloud.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;LeanCloud&lt;/a&gt; ，且需要修改&lt;strong&gt;主题配置文件&lt;/strong&gt;&lt;code&gt;themes/next/_config.yml&lt;/code&gt; 。&lt;br&gt;详细的操作可参考这篇博文《&lt;a href=&quot;http://www.joryhe.com/2016-05-29-how_to_create_leancloud_read_Counter.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;leanCloud,实现文章阅读量统计&lt;/a&gt;》。&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="linziye.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="linziye.com/tags/hexo/"/>
    
      <category term="NexT" scheme="linziye.com/tags/NexT/"/>
    
      <category term="LeanCloud" scheme="linziye.com/tags/LeanCloud/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github 搭建个人博客</title>
    <link href="linziye.com/2017/09/02/hexo-github-build-personal-blog/"/>
    <id>linziye.com/2017/09/02/hexo-github-build-personal-blog/</id>
    <published>2017-09-02T13:29:20.000Z</published>
    <updated>2017-11-02T08:44:44.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/uploads/2017-09-02/hexo-home.png" alt="Hexo"><br>Hexo 是一个快速、简洁且高效的博客框架，基于Node.js ，使用 Markdown（或其他渲染引擎）解析文章，并且只需一条指令即可部署到 GitHub Pages（或Heroku 等其他网站）。</p><p>使用Hexo+Github 搭建个人博客，简单来说分两步：</p><ol><li>本地搭建Hexo </li><li>部署至Github</li></ol><p>说明：本文环境基于macOS Sierra 且已安装git 。</p><a id="more"></a><h2 id="本地搭建Hexo"><a href="#本地搭建Hexo" class="headerlink" title="本地搭建Hexo"></a>本地搭建Hexo</h2><p>Hexo 是基于Node.js 环境，故搭建Hexo，即：</p><ol><li>搭建Node.js 环境</li><li>安装Hexo </li><li>安装喜欢的 Theme</li><li>个性化配置</li></ol><h3 id="搭建Node-js-环境"><a href="#搭建Node-js-环境" class="headerlink" title="搭建Node.js 环境"></a>搭建Node.js 环境</h3><blockquote><p>Node Version Manager - Simple bash script to manage multiple active node.js versions</p></blockquote><p>建议使用<code>nvm</code> 工具安装并操控<a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js 环境</a>，步骤如下：</p><ol><li><p>在个人Home 目录安装 <a href="https://github.com/creationix/nvm" target="_blank" rel="noopener">nvm</a></p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/creationix/nvm.git .nvm</span><br></pre></td></tr></table></figure></li><li><p>在<code>~/.bash_profile</code> 中增加nvm 环境变量</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.nvm/nvm.sh</span><br></pre></td></tr></table></figure></li><li><p>执行<code>source ~/.bash_profile</code> 使环境变量生效</p></li><li><p>使用nvm 安装Node.js 环境（可同时安装多个版本的Node.js ，并使用步骤5 的命令指定当前使用的版本）</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## List remote versions available for install</span></span><br><span class="line">$ nvm ls-remote</span><br><span class="line"></span><br><span class="line"><span class="comment">## Download and install version 6.11.2</span></span><br><span class="line">$ nvm install v6.11.2</span><br></pre></td></tr></table></figure></li><li><p>使用<code>nvm</code> 工具选择当前使用的Node.js 环境</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## List installed versions</span></span><br><span class="line">$ nvm ls</span><br><span class="line"></span><br><span class="line"><span class="comment">## Modify PATH to use version 6.11.2</span></span><br><span class="line">$ nvm use v6.11.2</span><br></pre></td></tr></table></figure></li></ol><p>上述步骤已完成Node.js 环境安装及当前使用的Node.js 环境设置。以下是nvm 使用技巧说明：</p><ol><li><p>常用的nvm 命令</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## List remote versions available for install</span></span><br><span class="line">$ nvm ls-remote</span><br><span class="line"></span><br><span class="line"><span class="comment">## Download and install a &lt;version&gt;</span></span><br><span class="line">$ nvm install &lt;version&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">## List installed versions</span></span><br><span class="line">$ nvm ls</span><br><span class="line"></span><br><span class="line"><span class="comment">## Modify PATH to use &lt;version&gt;.</span></span><br><span class="line">$ nvm use &lt;version&gt;</span><br></pre></td></tr></table></figure></li><li><p>npm 更新慢问题解决<br> Node.js 采用<a href="https://www.npmjs.com/" target="_blank" rel="noopener">npm（Node Package Manager）工具</a>进行Node 程序包管理。但npm 默认采用国外的镜像点，更新较慢，可更换为<a href="https://npm.taobao.org/" target="_blank" rel="noopener">淘宝镜像点</a>。</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ npm config ls -l|grep registry</span><br><span class="line">registry = <span class="string">"https://registry.npmjs.org/"</span></span><br><span class="line"></span><br><span class="line">$ npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br><span class="line">$ npm config ls -l|grep registry</span><br><span class="line">registry = <span class="string">"https://registry.npm.taobao.org/"</span></span><br><span class="line">; registry = <span class="string">"https://registry.npmjs.org/"</span> (overridden) </span><br><span class="line"></span><br><span class="line">$ npm update</span><br></pre></td></tr></table></figure></li><li><p>更新npm 工具</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ npm install npm@latest -g</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看npm 版本</span></span><br><span class="line">$ npm -v</span><br></pre></td></tr></table></figure></li></ol><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>安装Hexo 步骤如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br><span class="line">$ hexo init [blog-site-folder]</span><br><span class="line">$ <span class="built_in">cd</span> [blog-site-folder]</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>说明：使用npm 下载安装<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo 程序</a>，选项参数<code>-g</code>的作用是将Hexo 程序安装在当前Node.js 环境中，例如<code>~/.nvm/versions/node/v6.11.2/lib/node_modules</code> 。</p><p>常用的Hexo 命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 新建一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站。</span></span><br><span class="line">$ hexo init [folder]</span><br><span class="line"></span><br><span class="line"><span class="comment">## 新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。</span></span><br><span class="line"><span class="comment">## 如果标题包含空格的话，请使用引号括起来。</span></span><br><span class="line">$ hexo new [layout] &lt;title&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 生成静态文件</span></span><br><span class="line"><span class="comment">## 若附加选项参数"-d" 或"--deploy" ，即文件生成后立即部署网站</span></span><br><span class="line"><span class="comment">## 若附加选项参数"-w" 或"--watch" ，即监视文件变动</span></span><br><span class="line"><span class="comment">## 可以简写为"hexo g"</span></span><br><span class="line">$ hexo generate</span><br><span class="line"></span><br><span class="line"><span class="comment">## 发表草稿</span></span><br><span class="line">$ hexo publish [layout] &lt;filename&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 启动服务器。默认情况下，访问网址为： http://localhost:4000/</span></span><br><span class="line"><span class="comment">## 可以简写为"hexo s"</span></span><br><span class="line">$ hexo server</span><br><span class="line"></span><br><span class="line"><span class="comment">## 部署网站</span></span><br><span class="line"><span class="comment">## 可以简写为"hexo d"</span></span><br><span class="line">$ hexo deploy</span><br><span class="line"></span><br><span class="line"><span class="comment">## 清除缓存文件 (db.json) 和已生成的静态文件 (public)。</span></span><br><span class="line"><span class="comment">## 在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</span></span><br><span class="line">$ hexo clean</span><br><span class="line"></span><br><span class="line"><span class="comment">## 显示 Hexo 版本</span></span><br><span class="line">$ hexo version</span><br></pre></td></tr></table></figure><p>插播一个有用的npm 命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看Hexo 站点安装了哪些node 程序包</span></span><br><span class="line"><span class="comment">## `--depth` 表示检索深度为0，即不显示其依赖包</span></span><br><span class="line">$ <span class="built_in">cd</span> [blog-site-folder]</span><br><span class="line">$ npm list --depth=0</span><br></pre></td></tr></table></figure><h3 id="安装喜欢的-Theme"><a href="#安装喜欢的-Theme" class="headerlink" title="安装喜欢的 Theme"></a>安装喜欢的 Theme</h3><p>Hexo 默认的Theme 是landscape ，显然还有更好的选择。Hexo Github 给出了”<a href="https://en.abnerchou.me/Blog/5c00ca67/" target="_blank" rel="noopener">Hexo top 10 themes</a>“ 。</p><p>我这里选择下载<a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">Hexo NexT 最新主题</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> [your-hexo-site]</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>当然，若是希望升级Hexo NexT 主题，可执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> themes/next</span><br><span class="line">$ git pull</span><br></pre></td></tr></table></figure><p>启用Hexo NexT Theme ，在站点配置文件<code>_config.yml</code> 找到 <code>theme</code> 字段，并将其值更改为 <code>next</code><br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure></p><h3 id="个性化配置"><a href="#个性化配置" class="headerlink" title="个性化配置"></a>个性化配置</h3><p>站点和主题的个性化配置，可分别参考<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo 中文官网</a> 和<a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT, Elegant Theme for Hexo</a> 。</p><h2 id="部署至Github"><a href="#部署至Github" class="headerlink" title="部署至Github"></a>部署至Github</h2><ol><li>首先在<a href="https://github.com/" target="_blank" rel="noopener">Github</a> 上注册一个账号，并建立GitHub Pages Repository ，该仓库名必须是<code>your_user_name.github.io</code></li><li><p><a href="https://help.github.com/articles/about-ssh/" target="_blank" rel="noopener">本地生成ssh 公私钥</a>，并将公钥复制到Github 个人帐户SSH keys中</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~</span><br><span class="line">$ ssh-keygen -t rsa -b 4096 -C <span class="string">"your_email@example.com"</span></span><br></pre></td></tr></table></figure><p> 执行上述<code>ssh-keygen</code> 命令，会以交互式要求输入文件名（不输入直接<code>Enter</code>，默认生成的公私钥文件名分别是<code>id_rsa.pub</code> 和<code>id_rsa</code>）和密码。<br> 将公钥文件（例如<code>id_rsa.pub</code> ）中的内容拷贝至<code>Github</code> -&gt; <code>Settings</code> -&gt; <code>SSH and GPG keys</code> -&gt; <code>SSH Keys</code></p></li><li><p>修订站点配置文件<code>_config.yml</code></p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> [your-hexo-site]</span><br><span class="line">$ vi _config.yml</span><br></pre></td></tr></table></figure><p> 找到<code>deploy</code> 字段，作如下修改</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git </span><br><span class="line">  repository: git@github.com:&lt;your_user_name&gt;/&lt;your_user_name&gt;.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></li><li><p>部署Hexo 站点到Github</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> [your-hexo-site]</span><br><span class="line">$ npm install hexo-deployer-git --save</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></li></ol><h2 id="Plugins"><a href="#Plugins" class="headerlink" title="Plugins"></a>Plugins</h2><ul><li><strong><a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="noopener">hexo-deployer-git</a></strong>: Git deployer plugin for Hexo.</li><li><strong><a href="https://github.com/cometlj/hexo-translate-title" target="_blank" rel="noopener">hexo-translate-title</a></strong>: translate the chinese title of Hexo blog to english words automatially</li><li><strong><a href="https://github.com/willin/hexo-wordcount" target="_blank" rel="noopener">hexo-wordcount</a></strong>: Word Count Plugin for Hexo.</li><li><strong><a href="https://github.com/flashlab/hexo-generator-search" target="_blank" rel="noopener">hexo-generator-searchdb</a></strong>: A plugin to generate the site’s search data</li><li><strong><a href="https://github.com/ludoviclefevre/hexo-generator-seo-friendly-sitemap" target="_blank" rel="noopener">hexo-generator-seo-friendly-sitemap</a></strong>: Generate SEO-friendly sitemap.</li></ul><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://github.com/creationix/nvm" target="_blank" rel="noopener">nvm in Github</a></li><li><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js 官网</a></li><li><a href="http://nodejs.cn/" target="_blank" rel="noopener">Node.js 中文官网</a></li><li><a href="https://www.npmjs.com/" target="_blank" rel="noopener">npm 官网</a></li><li><a href="https://npm.taobao.org/" target="_blank" rel="noopener">npm 淘宝镜像点</a></li><li><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo 中文官网</a></li><li><a href="https://github.com/hexojs/hexo" target="_blank" rel="noopener">Hexo in Github</a></li><li><a href="https://en.abnerchou.me/Blog/5c00ca67/" target="_blank" rel="noopener">Hexo top 10 themes</a></li><li><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT, Elegant Theme for Hexo</a></li><li><a href="https://help.github.com/articles/about-ssh/" target="_blank" rel="noopener">github认证，ssh配置</a></li><li><a href="http://fontawesome.io/" target="_blank" rel="noopener">Font Awesome</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/uploads/2017-09-02/hexo-home.png&quot; alt=&quot;Hexo&quot;&gt;&lt;br&gt;Hexo 是一个快速、简洁且高效的博客框架，基于Node.js ，使用 Markdown（或其他渲染引擎）解析文章，并且只需一条指令即可部署到 GitHub Pages（或Heroku 等其他网站）。&lt;/p&gt;
&lt;p&gt;使用Hexo+Github 搭建个人博客，简单来说分两步：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;本地搭建Hexo &lt;/li&gt;
&lt;li&gt;部署至Github&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;说明：本文环境基于macOS Sierra 且已安装git 。&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="linziye.com/categories/hexo/"/>
    
    
      <category term="github" scheme="linziye.com/tags/github/"/>
    
      <category term="hexo" scheme="linziye.com/tags/hexo/"/>
    
      <category term="NexT" scheme="linziye.com/tags/NexT/"/>
    
  </entry>
  
  <entry>
    <title>Linux iptables设置</title>
    <link href="linziye.com/2016/05/19/linux-iptables-setings/"/>
    <id>linziye.com/2016/05/19/linux-iptables-setings/</id>
    <published>2016-05-19T00:30:21.000Z</published>
    <updated>2017-11-02T08:44:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="屏蔽指定IP"><a href="#屏蔽指定IP" class="headerlink" title="屏蔽指定IP"></a>屏蔽指定IP</h2><p>以屏蔽IP： 192.168.184.13 为例 </p><h3 id="方法1：命令行"><a href="#方法1：命令行" class="headerlink" title="方法1：命令行"></a>方法1：命令行</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo iptables -I INPUT -s 192.168.184.13 -j DROP</span><br></pre></td></tr></table></figure><p>说明：该方法临时修改防火墙配置，iptables服务重启后失效 </p><h3 id="方法2：修改-iptables-文件"><a href="#方法2：修改-iptables-文件" class="headerlink" title="方法2：修改 iptables 文件"></a>方法2：修改 iptables 文件</h3><ol><li>打开 <code>/etc/sysconfig/iptables</code> 文件</li><li>增加一行 <code>-A INPUT -s 192.168.184.13/32 -j DROP</code> </li></ol><p>说明：该方法永久有效 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;屏蔽指定IP&quot;&gt;&lt;a href=&quot;#屏蔽指定IP&quot; class=&quot;headerlink&quot; title=&quot;屏蔽指定IP&quot;&gt;&lt;/a&gt;屏蔽指定IP&lt;/h2&gt;&lt;p&gt;以屏蔽IP： 192.168.184.13 为例 &lt;/p&gt;
&lt;h3 id=&quot;方法1：命令行&quot;&gt;&lt;a href
      
    
    </summary>
    
      <category term="Linux" scheme="linziye.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="linziye.com/tags/Linux/"/>
    
      <category term="iptables" scheme="linziye.com/tags/iptables/"/>
    
  </entry>
  
  <entry>
    <title>【学习】慕课网-在Ubuntu Server下搭建LAMP环境</title>
    <link href="linziye.com/2016/03/22/%5Blearning%5D-mo-net-to-build-a-lamp-environment-in-ubuntu-server/"/>
    <id>linziye.com/2016/03/22/[learning]-mo-net-to-build-a-lamp-environment-in-ubuntu-server/</id>
    <published>2016-03-22T06:47:55.000Z</published>
    <updated>2017-11-02T08:44:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="慕课网-在Ubuntu-Server下搭建LAMP环境"><a href="#慕课网-在Ubuntu-Server下搭建LAMP环境" class="headerlink" title="慕课网-在Ubuntu Server下搭建LAMP环境"></a>慕课网-在Ubuntu Server下搭建LAMP环境</h2><p><a href="http://www.imooc.com/learn/170" target="_blank" rel="noopener">课程链接</a></p><h3 id="2-1-性感的Ubuntu-Server操作系统"><a href="#2-1-性感的Ubuntu-Server操作系统" class="headerlink" title="2-1 性感的Ubuntu Server操作系统"></a>2-1 性感的Ubuntu Server操作系统</h3><ul><li>LTS:Long Term Support(长期支持版本)</li><li>该课程使用Ubuntu Server环境版本是 <em>LTS 12.04</em></li></ul><a id="more"></a><h3 id="4-1-使用apt-get工具安装Apache-PHP-MySQL"><a href="#4-1-使用apt-get工具安装Apache-PHP-MySQL" class="headerlink" title="4-1 使用apt-get工具安装Apache PHP MySQL"></a>4-1 使用apt-get工具安装Apache PHP MySQL</h3><ul><li>Ubuntu 使用 apt-get 命令获取并安装软件安装包</li><li><p>检查Apache是否已加载php5_module模块，执行命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/apache2/mods-enabled/php5.load</span><br></pre></td></tr></table></figure><p>如果出现如下提示，说明已加载</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LoadModule php5_module /usr/lib/apache2/modules/libphp5.so</span><br></pre></td></tr></table></figure></li><li><p>检查PHP是否已安装加载MYSQL.so扩展，执行命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/php5/conf.d/mysql.ini</span><br></pre></td></tr></table></figure><p>若存在该文件，且显示如下提示，说明已加载</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extension=mysql.so</span><br></pre></td></tr></table></figure></li></ul><h3 id="4-3-给PHP添加常用扩展"><a href="#4-3-给PHP添加常用扩展" class="headerlink" title="4-3 给PHP添加常用扩展"></a>4-3 给PHP添加常用扩展</h3><ul><li>安装了GD库和CURL（需了解是什么）</li></ul><h3 id="5-3-LAMP环境配置文件详解"><a href="#5-3-LAMP环境配置文件详解" class="headerlink" title="5-3 LAMP环境配置文件详解"></a>5-3 LAMP环境配置文件详解</h3><ul><li>Apache 配置文件加载流程<br>通过 apache.conf 加载：<br>conf.d/<em><br>httpd.conf<br>ports.conf<br>mods-enabled/</em><br>sites-enabled/* </li><li>MySQL 核心配置文件 my.cnf</li><li>PHP 核心配置文件 php.ini</li></ul><h3 id="5-7-在Apache中配置虚拟主机"><a href="#5-7-在Apache中配置虚拟主机" class="headerlink" title="5-7 在Apache中配置虚拟主机"></a>5-7 在Apache中配置虚拟主机</h3><p>在Ubuntu Server操作系统中，有一些软件的敏感操作受到 <strong>apparmore</strong> 的约束（apparmore是系统安全应用），apparmore关于mysql安全操作的配置文件路径是：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/apparmore.d/usr.sbin.mysqld</span><br></pre></td></tr></table></figure><h3 id="5-8-MySQL数据存储目录迁移"><a href="#5-8-MySQL数据存储目录迁移" class="headerlink" title="5-8 MySQL数据存储目录迁移"></a>5-8 MySQL数据存储目录迁移</h3><p>默认情况下，mysql的数据存储目录是 <code>/var/lib/mysql</code></p><h3 id="5-11-开启MySQL的remote-access"><a href="#5-11-开启MySQL的remote-access" class="headerlink" title="5-11 开启MySQL的remote access"></a>5-11 开启MySQL的remote access</h3><p>软件： <strong>navicat</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;慕课网-在Ubuntu-Server下搭建LAMP环境&quot;&gt;&lt;a href=&quot;#慕课网-在Ubuntu-Server下搭建LAMP环境&quot; class=&quot;headerlink&quot; title=&quot;慕课网-在Ubuntu Server下搭建LAMP环境&quot;&gt;&lt;/a&gt;慕课网-在Ubuntu Server下搭建LAMP环境&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.imooc.com/learn/170&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;课程链接&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-1-性感的Ubuntu-Server操作系统&quot;&gt;&lt;a href=&quot;#2-1-性感的Ubuntu-Server操作系统&quot; class=&quot;headerlink&quot; title=&quot;2-1 性感的Ubuntu Server操作系统&quot;&gt;&lt;/a&gt;2-1 性感的Ubuntu Server操作系统&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;LTS:Long Term Support(长期支持版本)&lt;/li&gt;
&lt;li&gt;该课程使用Ubuntu Server环境版本是 &lt;em&gt;LTS 12.04&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Linux" scheme="linziye.com/categories/Linux/"/>
    
    
      <category term="Ubuntu" scheme="linziye.com/tags/Ubuntu/"/>
    
      <category term="Linux" scheme="linziye.com/tags/Linux/"/>
    
      <category term="Apache" scheme="linziye.com/tags/Apache/"/>
    
      <category term="MySQL" scheme="linziye.com/tags/MySQL/"/>
    
      <category term="PHP" scheme="linziye.com/tags/PHP/"/>
    
      <category term="慕课网" scheme="linziye.com/tags/%E6%85%95%E8%AF%BE%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>linux中shell变量含义</title>
    <link href="linziye.com/2016/03/18/the-meaning-of-shel-variable-in-linux/"/>
    <id>linziye.com/2016/03/18/the-meaning-of-shel-variable-in-linux/</id>
    <published>2016-03-18T11:26:07.000Z</published>
    <updated>2017-11-02T08:44:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="shell变量"><a href="#shell变量" class="headerlink" title="shell变量 $$"></a>shell变量 <code>$$</code></h2><p>含义：shell本身的PID（ProcessID）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ cat test.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span> <span class="string">"this is %s\n"</span> <span class="string">"$$"</span></span><br><span class="line">$ bash test.sh aaa</span><br><span class="line">this is 2638</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="shell变量-1"><a href="#shell变量-1" class="headerlink" title="shell变量 $@"></a>shell变量 <code>$@</code></h2><p>含义：所有参数列表。如果”$@”用引号(“”)括起来的情况、以”$1” “$2” … “$n” 的形式输出所有参数</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ cat test.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span> <span class="string">"this is %s\n"</span> <span class="string">"<span class="variable">$@</span>"</span></span><br><span class="line">$ bash test.sh aaa bbb ccc</span><br><span class="line">this is aaa</span><br><span class="line">this is bbb</span><br><span class="line">this is ccc</span><br></pre></td></tr></table></figure><h2 id="shell变量-2"><a href="#shell变量-2" class="headerlink" title="shell变量 $*"></a>shell变量 <code>$*</code></h2><p>含义：所有参数列表。如果”$*”用引号(“”)括起来的情况、以”$1 $2 … $n” 的形式输出所有参数</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ cat test.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span> <span class="string">"this is %s\n"</span> <span class="string">"$*"</span></span><br><span class="line">$ bash test.sh aaa bbb ccc</span><br><span class="line">this is aaa bbb ccc</span><br></pre></td></tr></table></figure><h2 id="shell变量-3"><a href="#shell变量-3" class="headerlink" title="shell变量 $#"></a>shell变量 <code>$#</code></h2><p>含义：shell参数个数</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ cat test.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span> <span class="string">"this is %s\n"</span> <span class="string">"<span class="variable">$#</span>"</span></span><br><span class="line">$ bash test.sh aaa bbb ccc</span><br><span class="line">this is 3</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;shell变量&quot;&gt;&lt;a href=&quot;#shell变量&quot; class=&quot;headerlink&quot; title=&quot;shell变量 $$&quot;&gt;&lt;/a&gt;shell变量 &lt;code&gt;$$&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;含义：shell本身的PID（ProcessID）&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cat test.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;this is %s\n&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;$$&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ bash test.sh aaa&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;this is 2638&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="linziye.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="linziye.com/tags/Linux/"/>
    
      <category term="shell" scheme="linziye.com/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>hexo发布新文章</title>
    <link href="linziye.com/2016/01/08/hexo-releases-new-articles/"/>
    <id>linziye.com/2016/01/08/hexo-releases-new-articles/</id>
    <published>2016-01-08T05:56:12.000Z</published>
    <updated>2017-11-02T08:44:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="发布新文章到我的github步骤"><a href="#发布新文章到我的github步骤" class="headerlink" title="发布新文章到我的github步骤"></a>发布新文章到我的github步骤</h2><ol><li><p>新建文章文件</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">hexo n [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure></li></ol><a id="more"></a><ol><li><p>生成静态文件</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure></li><li><p>发布站点</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://hexo.io/zh-cn/docs/generating.html" target="_blank" rel="noopener">hexo官网</a></li><li><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT theme</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;发布新文章到我的github步骤&quot;&gt;&lt;a href=&quot;#发布新文章到我的github步骤&quot; class=&quot;headerlink&quot; title=&quot;发布新文章到我的github步骤&quot;&gt;&lt;/a&gt;发布新文章到我的github步骤&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;新建文章文件&lt;/p&gt;
 &lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo new [layout] &amp;lt;title&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# or&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo n [layout] &amp;lt;title&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="hexo" scheme="linziye.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="linziye.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>nginx install</title>
    <link href="linziye.com/2016/01/08/nginx-instal/"/>
    <id>linziye.com/2016/01/08/nginx-instal/</id>
    <published>2016-01-08T04:20:25.000Z</published>
    <updated>2017-11-02T08:44:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="环境：OS-X-Yosemite-10-10-5"><a href="#环境：OS-X-Yosemite-10-10-5" class="headerlink" title="环境：OS X Yosemite(10.10.5)"></a>环境：OS X Yosemite(10.10.5)</h2><ol><li><p>下载<a href="http://www.pcre.org/" target="_blank" rel="noopener">PCRE</a>和<a href="http://nginx.org/" target="_blank" rel="noopener">nginx</a></p></li><li><p>安装PCRE</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ tar xvzf pcre-8.5</span><br><span class="line">$ <span class="built_in">cd</span> pcre-8.5</span><br><span class="line">$ sudo ./configure --prefix=/usr/<span class="built_in">local</span></span><br><span class="line">$ sudo make</span><br><span class="line">$ sudo make install</span><br></pre></td></tr></table></figure></li></ol><a id="more"></a><ol><li><p>安装nginx</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ tar xvzf nginx-1.6.0.tar.gz</span><br><span class="line">$ <span class="built_in">cd</span> nginx-1.6.0</span><br><span class="line">$ sudo ./configure --prefix=/usr/<span class="built_in">local</span>/nginx --with-http_ssl_module --with-cc-opt=<span class="string">"-Wno-deprecated-declarations"</span></span><br><span class="line">$ sudo make</span><br><span class="line">$ sudo make install</span><br></pre></td></tr></table></figure></li><li><p>开启nginx<br> 将 /usr/local/nginx/sbin 加入到环境变量里，执行命令：</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo nginx</span><br></pre></td></tr></table></figure><p> 打开浏览器 <a href="http://localhost" target="_blank" rel="noopener">http://localhost</a> ，看到“Welcome to nginx!”字样，说明nginx安装启动成功</p></li><li><p>关闭nginx</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo nginx -s stop</span><br></pre></td></tr></table></figure></li><li><p>重启nginx（有用的指令之一）</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo nginx -s reload</span><br></pre></td></tr></table></figure></li><li><p>判断配置文件是否正确（有用的指令之一）</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo nginx -t</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;环境：OS-X-Yosemite-10-10-5&quot;&gt;&lt;a href=&quot;#环境：OS-X-Yosemite-10-10-5&quot; class=&quot;headerlink&quot; title=&quot;环境：OS X Yosemite(10.10.5)&quot;&gt;&lt;/a&gt;环境：OS X Yosemite(10.10.5)&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;下载&lt;a href=&quot;http://www.pcre.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;PCRE&lt;/a&gt;和&lt;a href=&quot;http://nginx.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;nginx&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装PCRE&lt;/p&gt;
 &lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ tar xvzf pcre-8.5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; pcre-8.5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo ./configure --prefix=/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo make&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="nginx" scheme="linziye.com/categories/nginx/"/>
    
    
      <category term="nginx" scheme="linziye.com/tags/nginx/"/>
    
      <category term="OS X" scheme="linziye.com/tags/OS-X/"/>
    
  </entry>
  
</feed>
